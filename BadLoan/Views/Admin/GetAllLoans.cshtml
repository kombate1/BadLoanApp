@using System.Globalization
@using Microsoft.AspNetCore.Identity
@model IEnumerable<BadLoan.Models.LoanApplication>
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


@{
    Layout = null;
    ViewData["Title"] = "Loan Applications for Approval";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <style>
        body {
            margin: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8fafc;
        }

        .container {
            display: flex;
            min-height: 100vh;
        }

        .sidebar {
            width: 180px;
            background-color: #e3aa6b;
            color: white;
            display: flex;
            flex-direction: column;
            padding: 20px 15px;
            position: fixed;
            height: 100vh;
            font-size: 1rem;
            transition: width 0.3s;
        }

            .sidebar.collapsed {
                width: 60px;
            }

            .sidebar .profile {
                text-align: center;
                margin-bottom: 30px;
            }

            .sidebar.collapsed .profile h3,
            .sidebar.collapsed .profile p,
            .sidebar.collapsed .profile span,
            .sidebar.collapsed .menu span {
                display: none;
            }


            .sidebar .profile h3 {
                margin: 5px 0;
                font-weight: bold;
                color: #000;
            }

            .sidebar .profile p {
                font-size: 0.9rem;
                color: #333;
            }

        .menu {
            width: 100%;
        }

            .menu a {
                display: flex;
                align-items: center;
                gap: 10px;
                padding: 12px 14px;
                text-decoration: none;
                color: white;
                font-weight: bold;
                border-radius: 8px;
                transition: background 0.3s;
            }

                .menu a:hover {
                    background-color: #d1975e;
                }

        .toggle-btn {
            position: absolute;
            top: 10px;
            right: -20px;
            background: #e3aa6b;
            border: none;
            color: white;
            font-size: 1.2rem;
            padding: 4px 6px;
            border-radius: 4px;
            cursor: pointer;
        }

        .main-content {
            margin-left: 180px;
            padding: 30px;
            flex: 1;
            transition: margin-left 0.3s;
        }

            .main-content.collapsed {
                margin-left: 60px;
            }

        /* Keep your existing styles below */
        .table-wrapper {
            background: white;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
        }

        .filter-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

            .filter-bar h2 {
                font-size: 1.8rem;
            }

            .filter-bar select, .filter-bar input[type="text"], .filter-bar input[type="date"] {
                padding: 8px 14px;
                border-radius: 6px;
                border: 1px solid #ccc;
                margin-left: 10px;
            }

        .status-badge {
            padding: 4px 10px;
            border-radius: 12px;
            font-size: 0.85em;
            font-weight: 600;
            text-transform: capitalize;
        }

        .pending {
            background-color: #fef3c7;
            color: #92400e;
        }

        .approved {
            background-color: #d1fae5;
            color: #065f46;
        }

        .rejected {
            background-color: #fee2e2;
            color: #991b1b;
        }

        .action-btns i {
            font-size: 1rem;
            margin: 0 6px;
            cursor: pointer;
        }

            .action-btns i:hover {
                transform: scale(1.1);
            }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 12px 16px;
            text-align: left;
            border-bottom: 1px solid #e5e7eb;
        }

        th {
            background-color: #f3f4f6;
            font-size: 0.7rem;
        }

        td {
            font-size: 0.6rem;
        }

        #confirmationModal {
            display: none;
            position: fixed;
            inset: 0;
            background: rgba(0,0,0,0.4);
            align-items: center;
            justify-content: center;
            z-index: 9999;
        }

            #confirmationModal.show {
                display: flex;
            }

        .modal-box {
            background: white;
            padding: 30px;
            border-radius: 10px;
            width: 340px;
            text-align: center;
            box-shadow: 0 5px 20px rgba(0,0,0,0.2);
        }

            .modal-box p {
                font-size: 0.8rem;
                margin-bottom: 20px;
            }

            .modal-box button {
                padding: 10px 18px;
                border: none;
                border-radius: 6px;
                font-weight: bold;
                cursor: pointer;
            }

        .btn-confirm {
            background-color: #10b981;
            color: white;
            margin-right: 10px;
        }

        .btn-cancel {
            background-color: #ef4444;
            color: white;
        }

        .doc-link {
            display: inline-flex;
            align-items: center;
            gap: 5px;
            color: #2563eb;
            text-decoration: none;
            font-weight: bold;
        }

            .doc-link:hover {
                text-decoration: underline;
            }
    </style>
</head>
<body>
    <div class="container">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <button class="toggle-btn" onclick="toggleSidebar()">
                <i class="fas fa-bars"></i>
            </button>

            <div class="profile" style="display: flex; flex-direction: column; align-items: start; gap: 6px;">
             
                <div style="display: flex; align-items: center; gap: 6px; font-weight: bold; color: black;">
                    <i class="fas fa-user-tie"></i>
                    <span>Approval Manager</span>
                </div>
            </div>

            <div class="menu">
                <a asp-controller="Admin" asp-action="Index">
                    <i class="fas fa-home"></i>
                    <span>Dashboard</span>
                </a>
                <a asp-controller="Admin" asp-action="GetAllLoans">
                    <i class="fas fa-file-invoice-dollar"></i>
                    <span>Applications</span>
                </a>
                <form id="logoutForm" method="post" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" class="form-inline">
                    <a>
                        <button type="submit" style="all: unset; cursor: pointer;">
                            <i class="fas fa-sign-out-alt"></i>
                            <span>Logout</span>
                        </button>
                    </a>
                </form>
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-content" id="mainContent">
            <div class="table-wrapper">
                <div class="filter-bar">
                    <h2>Loan Applications</h2>
                    <div>
                        <select id="statusFilter" onchange="filterTable()">
                            <option value="All">All Status</option>
                            <option value="pending">Pending</option>
                            <option value="approved">Approved</option>
                            <option value="rejected">Rejected</option>
                        </select>
                        <input type="date" id="dateInput" onchange="filterTable()" />
                        <input type="text" id="searchInput" placeholder="Search by name..." onkeyup="filterTable()" />
                    </div>
                </div>
                @if (!Model.Any())
                {
                    <p>No loan applications found.</p>
                }
                else
                {
                    <table id="loanTable">
                        <thead>
                            <tr>
                                <th>Reference ID</th>
                                <th>Customer</th>
                                <th>Loan Type</th>
                                <th>Amount</th>
                                <th>Duration(months)</th>

                                <th>Annual Income</th>
                                <th>Status</th>
                                <th>Documents</th>
                                <th>Date Submitted</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var app in Model)
                            {
                                var statusClass = app.Status?.ToLower() switch
                                {
                                    "pending" => "pending",
                                    "approved" => "approved",
                                    "rejected" => "rejected",
                                    _ => ""
                                };
                                <tr data-status="@app.Status?.ToLower()" data-name="@app.Id @app.Customer?.FirstName @app.Customer?.LastName" data-date="@app.SubmittedDate.ToString("yyyy-MM-dd")">
                                    <td>@app.Id</td>
                                    <td>@app.Customer?.FirstName @app.Customer?.LastName</td>
                                    <td>@app.LoanType?.LoanTypeName</td>
                                    <td>@app.LoanAmount.ToString("C", new CultureInfo("en-GH"))</td>
                                    <td>@app.Duration </td>
                                  
                                    <td>@app.AnnualIncome.ToString("C", new CultureInfo("en-GH"))</td>
                                    <td><span class="status-badge @statusClass">@app.Status</span></td>
                                    <td>
                                        @foreach (var doc in app.UploadedDocuments)
                                        {

                                            <a  asp-controller="LoanApplication" asp-action="DownloadFile" asp-route-filepath="@doc.FilePath" target="_blank">

                                                <i class="fas fa-file-alt"></i> @doc.FileType
                                            </a>

                                            <br />
                                        }
                                    </td>
                                    <td>@app.SubmittedDate.ToString("dd MMM yyyy, hh:mm tt")</td>
                                    <td class="action-btns">
                                        <a asp-action="ViewLoanDetails" asp-controller="LoanApplication" asp-route-id="@app.Id" title="View Details">
                                            <i class="fas fa-eye text-primary"></i>
                                        </a>
                                        @if (app.Status == "Pending")
                                        {
                                            <a href="javascript:void(0)" onclick="confirmAction('@Url.Action("ApproveApplication", new { id = app.Id })', 'approve this loan application')" title="Approve">
                                                <i class="fas fa-check-circle text-success"></i>
                                            </a>
                                            <a href="javascript:void(0)" onclick="confirmAction('@Url.Action("RejectApplication", new { id = app.Id })', 'reject this loan application')" title="Reject">
                                                <i class="fas fa-times-circle text-danger"></i>
                                            </a>
                                        }
                                    </td>

                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>

    <div id="confirmationModal">
        <div class="modal-box">
            <p id="modalMessage">Are you sure?</p>

            <div id="commentContainer" style="display: none; margin-bottom: 1em; text-align: left;">
                <label for="Comment"><strong>Rejection Reason:</strong></label>
                <textarea id="commentInput" rows="3" style="width: 100%; margin-top: 6px;" required></textarea>
            </div>

            <button onclick="proceedAction()" class="btn-confirm">Yes</button>
            <button onclick="closeModal()" class="btn-cancel">Cancel</button>
        </div>
    </div>

    <script>
                let actionUrl = "";

                function confirmAction(url, message) {
                    actionUrl = url;
                    const isReject = url.toLowerCase().includes("reject");
                    document.getElementById("modalMessage").innerText = "Are you sure you want to " + message + "?";
                    document.getElementById("commentContainer").style.display = isReject ? "block" : "none";
                    document.getElementById("commentInput").value = "";
                    document.getElementById("confirmationModal").classList.add("show");
                }

        //         function proceedAction() {
        //     const comment = document.getElementById("commentInput").value;
        //     const encodedComment = encodeURIComponent(comment);

        //     let finalUrl = actionUrl;
        //     if (actionUrl.toLowerCase().includes("reject")) {
        //         finalUrl += (actionUrl.includes("?") ? "&" : "?") + "comment=" + encodedComment;
        //     }

        //     window.location.href = finalUrl;
        // }
        function proceedAction() {
    // Check if it's a rejection
    const isReject = actionUrl.toLowerCase().includes("reject");

    if (isReject) {
        const comment = document.getElementById("commentInput").value.trim();

        if (!comment) {
            alert("Please enter a rejection reason before proceeding.");
            return;
        }

        const encodedComment = encodeURIComponent(comment);
        let finalUrl = actionUrl;

        finalUrl += (actionUrl.includes("?") ? "&" : "?") + "comment=" + encodedComment;
        window.location.href = finalUrl;
    } else {
        // Directly proceed for approval without comment
        window.location.href = actionUrl;
    }
}

                function closeModal() {
                    document.getElementById("confirmationModal").classList.remove("show");
                }

                function toggleSidebar() {
                    const sidebar = document.getElementById('sidebar');
                    const main = document.getElementById('mainContent');
                    sidebar.classList.toggle('collapsed');
                    main.classList.toggle('collapsed');
                }

                function filterTable() {
                    const status = document.getElementById("statusFilter").value.toLowerCase();
                    const search = document.getElementById("searchInput").value.toLowerCase();
                    const date = document.getElementById("dateInput").value;

                    const rows = document.querySelectorAll("#loanTable tbody tr");
                    rows.forEach(row => {
                        const rowStatus = row.getAttribute("data-status");
                        const rowName = row.getAttribute("data-name").toLowerCase();
                        const rowDate = row.getAttribute("data-date");

                        const matchesStatus = status === "all" || rowStatus === status;
                        const matchesName = rowName.includes(search);
                        const matchesDate = !date || rowDate === date;

                        if (matchesStatus && matchesName && matchesDate) {
                            row.style.display = "";
                        } else {
                            row.style.display = "none";
                        }
                    });
                }
    </script>
</body>
</html>