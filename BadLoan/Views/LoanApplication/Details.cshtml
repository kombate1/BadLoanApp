@model BadLoan.Models.LoanApplication
@using System.Globalization
@{
    Layout = null;
    ViewData["Title"] = "Loan Application Details";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f1f5f9;
            margin: 0;
            padding: 0;
        }

        .main-container {
            max-width: 950px;
            margin: 40px auto;
            padding: 24px;
            background-color: #ffffff;
            border-radius: 14px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.06);
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 2px solid #e2e8f0;
            padding-bottom: 16px;
            margin-bottom: 30px;
        }

            .header h2 {
                margin: 0;
                font-size: 26px;
                color: #1e40af;
            }

        .status {
            text-align: right;
        }

        .badge {
            padding: 6px 14px;
            border-radius: 999px;
            font-size: 13px;
            font-weight: 600;
            text-transform: uppercase;
        }

            .badge.approved {
                background-color: #10b981;
                color: white;
            }

            .badge.rejected {
                background-color: #ef4444;
                color: white;
            }

            .badge.pending {
                background-color: #f59e0b;
                color: white;
            }

        .submitted-date {
            display: block;
            font-size: 12px;
            color: #6b7280;
            margin-top: 4px;
        }

        .section {
            display: flex;
            flex-wrap: wrap;
            gap: 24px;
        }

        .card {
            flex: 1;
            min-width: 320px;
            padding: 24px;
            background-color: #f8fafc;
            border-radius: 12px;
            border: 1px solid #e2e8f0;
        }

            .card h3 {
                font-size: 18px;
                margin-bottom: 16px;
                color: #1e293b;
            }

        .info-item {
            margin-bottom: 14px;
        }

            .info-item label {
                display: block;
                font-size: 13px;
                color: #64748b;
                margin-bottom: 3px;
            }

            .info-item span {
                font-size: 15px;
                color: #0f172a;
                font-weight: 500;
            }

        .documents-section {
            margin-top: 40px;
        }

            .documents-section h3 {
                font-size: 18px;
                margin-bottom: 12px;
                color: #1e293b;
            }

        .file-list {
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .file-link {
            text-decoration: none;
            color: #1d4ed8;
            background-color: #e0e7ff;
            padding: 10px 16px;
            border-radius: 10px;
            display: inline-flex;
            align-items: center;
            gap: 10px;
            transition: background-color 0.2s ease;
        }

            .file-link:hover {
                background-color: #c7d2fe;
            }
    </style>
</head>
<body>
    <div class="main-container">
        <div class="header">
            <h2>Loan Application Details</h2>
            <div class="status">
                @{
                    var statusClass = Model.Status?.ToLower() switch
                    {
                        "approved" => "approved",
                        "rejected" => "rejected",
                        _ => "pending"
                    };
                }
                <span class="badge @statusClass">@Model.Status</span>
                <span class="submitted-date">Status as of today</span>
            </div>
        </div>

        <div class="section">
            <div class="card">
                <h3><i class="fa-solid fa-user"></i> Customer Information</h3>
                <div class="info-item">
                    <label>Full Name</label>
                    <span>@Model.Customer?.FirstName @Model.Customer?.LastName</span>
                </div>
                <div class="info-item">
                    <label>Occupation</label>
                    <span>@Model.Customer?.Occupation</span>
                </div>
                <div class="info-item">
                    <label>Annual Income</label>
                    <span>@Model.AnnualIncome.ToString("C", new CultureInfo("en-US"))</span>
                </div>
            </div>

            <div class="card">
                <h3><i class="fa-solid fa-sack-dollar"></i> Loan Details</h3>
                <div class="info-item">
                    <label>Requested Amount</label>
                    <span>@Model.LoanAmount.ToString("C", new CultureInfo("en-US"))</span>
                </div>
                <div class="info-item">
                    <label>Loan Purpose</label>
                    <span>@Model.LoanType?.LoanTypeName</span>
                </div>
                <div class="info-item">
                    <label>Loan Duration</label>
                    <span>@Model.Duration year(s)</span>
                </div>
            </div>
        </div>

        <div class="documents-section">
            <h3><i class="fa-solid fa-file-lines"></i> Submitted Documents</h3>
            <div class="file-list">
                @if (Model.UploadedDocuments != null && Model.UploadedDocuments.Any())
                {
                    foreach (var doc in Model.UploadedDocuments)
                    {
                        var icon = doc.FileType?.ToLower() switch
                        {
                            "proofofemployment" => "fa-id-card",
                            "proofofincome" => "fa-money-check-dollar",
                            _ => "fa-file"
                        };

                        <a class="file-link" asp-controller="LoanApplication" asp-action="DownloadDocument" asp-route-filePath="@doc.FilePath">
                            <i class="fa-solid @icon"></i> @GetFriendlyName(doc.FileType)
                        </a>
                    }
                }
                else
                {
                    <span style="color: #64748b;">No documents submitted.</span>
                }
            </div>
        </div>

        @functions {
            private string GetFriendlyName(string type)
            {
                return type?.ToLower() switch
                {
                    "proofofincome" => "Income Statement",
                    "proofofemployment" => "Proof of Employment",
                    _ => type ?? "Unknown"
                };
            }
        }

    </div>
</body>
</html>
