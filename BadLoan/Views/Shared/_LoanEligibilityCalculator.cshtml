@model BadLoan.Models.Calculator
@{
    ViewData["Title"] = "Loan Application";
}

<style>
    .eligibility-section {
        background-color: #FFF1E2;
        padding: 60px 20px;
    }

    .eligibility-container {
        background-color: #FAE2C1;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0,0,0,0.05);
        display: flex;
        flex-wrap: wrap;
    }

    .eligibility-form {
        background-color: #f4f4f4;
        padding: 40px;
        flex: 1;
    }

    .eligibility-form input,
    .eligibility-form select {
        background-color: #ddd !important;
        margin-bottom: 15px;
    }

    .eligibility-text {
        padding: 40px;
        background-color: #FAE2C1;
        flex: 1;
        text-align: left;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .eligibility-text h4 {
        font-weight: 700;
    }

    @@media (max-width: 768px) {
        .eligibility-container {
            flex-direction: column;
        }

        .eligibility-form,
        .eligibility-text {
            padding: 20px;
            text-align: center;
        }
    }
</style>

<!--<h1 class="text-center mb-4">Loan Eligibility Calculator</h1>-->

<section class="eligibility-section">
    <div class="container">
        <div class="eligibility-container">
            <!-- Left Form -->
            <div class="eligibility-form">
                <h3 style="font-family: 'Courier New', cursive;">Loan Eligibility Calculator</h3>

                @using (Html.BeginForm("Index", "Calculator", FormMethod.Post, new { id = "eligibilityForm" }))
                {
                    <div class="form-group">
                        <label asp-for="AnnualIncome">Annual Income (GH₵)</label>
                        <input type="number" step="0.01" asp-for="AnnualIncome" class="form-control" required />
                        @Html.ValidationMessageFor(m => m.AnnualIncome, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label asp-for="LoanAmount">Loan Amount (GH₵)</label>
                        <input type="number" step="0.01" asp-for="LoanAmount" class="form-control" required />
                        @Html.ValidationMessageFor(m => m.LoanAmount, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label asp-for="LoanType">Type of Loan</label>
                        <select asp-for="LoanType" class="form-control" required>
                            <option value="">Select Loan Type</option>
                            <option value="Personal">Personal Loan</option>
                            <option value="Auto">Auto Loan</option>
                            <option value="Mortgage">Mortgage Loan</option>
                        </select>
                        @Html.ValidationMessageFor(m => m.LoanType, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label asp-for="Duration">Duration for Loan Repayment (in months)</label>
                        <input type="number" step="0.01" asp-for="Duration" class="form-control" required />
                        @Html.ValidationMessageFor(m => m.Duration, "", new { @class = "text-danger" })
                    </div>

                    <div class="mt-4">
                        <button type="submit" class="btn btn-primary" id="calculateBtn">Calculate</button>
                        <button type="button" class="btn btn-secondary" id="clearBtn">Clear</button>
                    </div>


                    <div id="resultMessage">
                        @Html.Raw(ViewBag.MessageHtml)
                    </div>

                    @* @if (!string.IsNullOrEmpty(ViewBag.Message as string))
                    {
                        <div class="alert alert-info mt-3">@ViewBag.Message</div>
                    }

                    @Html.Raw(ViewBag.MessageHtml)

                    <div id="resultMessage"></div> *@
                }
            </div>

            <!-- Right Description -->
            <div class="eligibility-text">
                <h4>Check your loan Eligibility</h4>
                <p>Use our advanced calculator to instantly check if you qualify for a loan and see your potential terms.</p>
            </div>
        </div>
    </div>
</section>


<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById('eligibilityForm');
        const resultDiv = document.getElementById('resultMessage');
        const clearBtn = document.getElementById('clearBtn');

        if (form) {
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                resultDiv.innerHTML = '<div class="alert alert-info">Calculating...</div>';

                const formData = new FormData(form);

                fetch(form.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(err => { throw err; });
                    }
                    return response.text();
                })
                .then(html => {
                    resultDiv.innerHTML = html;
                })
                .catch(error => {
                    if (error.errors) {
                        // Handle validation errors
                        let errorHtml = '<div class="alert alert-danger">';
                        for (const [key, value] of Object.entries(error.errors)) {
                            errorHtml += `<p>${value}</p>`;
                        }
                        errorHtml += '</div>';
                        resultDiv.innerHTML = errorHtml;
                    } else {
                        resultDiv.innerHTML = '<div class="alert alert-danger mt-3">An error occurred.</div>';
                    }
                });
            });
        }

        clearBtn.addEventListener('click', function () {
            form.reset();
            resultDiv.innerHTML = '';
            //console.log("clear button clicked")
        });
    });
</script>

@* @section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById('eligibilityForm');
            const resultDiv = document.getElementById('resultMessage');
            const clearBtn = document.getElementById('clearBtn');

            if (form) {
                form.addEventListener('submit', function (e) {
                    e.preventDefault();
                    resultDiv.innerHTML = '<div class="alert alert-info">Calculating...</div>';

                    const formData = new FormData(form);

                    fetch(form.action, {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => {
                        if (!response.ok) {
                            return response.json().then(err => { throw err; });
                        }
                        return response.text();
                    })
                    .then(html => {
                        resultDiv.innerHTML = html;
                    })
                    .catch(error => {
                        if (error.errors) {
                            // Handle validation errors
                            let errorHtml = '<div class="alert alert-danger">';
                            for (const [key, value] of Object.entries(error.errors)) {
                                errorHtml += `<p>${value}</p>`;
                            }
                            errorHtml += '</div>';
                            resultDiv.innerHTML = errorHtml;
                        } else {
                            resultDiv.innerHTML = '<div class="alert alert-danger mt-3">An error occurred.</div>';
                        }
                    });
                });
            }

            clearBtn.addEventListener('click', function () {
                // form.reset();
                // resultDiv.innerHTML = '';
                console.log("clear button clicked")
            });
        });
    </script>
} *@



