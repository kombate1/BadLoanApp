@using Microsoft.AspNetCore.Identity
@using BadLoan.Data

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject ApplicationDbContext db

<style>
    .custom-auth-btn {
        background-color: #f4b375;
        color: black;
        font-weight: bold;
        border: none;
        border-radius: 12px;
        padding: 10px 20px;
        transition: background-color 0.3s ease;
        text-decoration: none;
    }

        .custom-auth-btn:hover {
            background-color: #e5a966;
            color: black;
        }

    .avatar-circle {
        background-color: #f4b375;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        color: black;
        margin-right: 10px;
        text-transform: uppercase;
    }

    .dropdown-toggle::after {
        display: none;
    }
</style>

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        var userId = user?.Id;

        var customer = db.Customers.FirstOrDefault(c => c.UserId == userId);
        var firstName = customer?.FirstName ?? "";
        var lastName = customer?.LastName ?? "";


            var notifications = db.Notifications.Where(n => n.UserId == userID && !n.IsRead).ToList();

        var initials = $"{(firstName.Length > 0 ? firstName[0] : ' ')}{(lastName.Length > 0 ? lastName[0] : ' ')}".ToUpper();
        var fullName = $"{firstName} {lastName}".Trim();


        var notifications = db.Notifications.Where(n => n.UserId == userId).ToList();
        var notificationsCount = notifications.Count();

        <li id="notificationArea" class="nav-item d-flex align-items-center me-3">
            @await Html.PartialAsync("_NotificationPartial", notificationsCount)
        </li>

        <li class="nav-item dropdown d-flex align-items-center">
            <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                <div class="avatar-circle">@initials</div>
                <span class="fw-bold">@fullName</span>
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                <li>
                    <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Profile</a>
                    <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/MyLoans">Recent loans</a>
                </li>
                <li>
                    <form method="post" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" class="dropdown-item p-0">
                        <button type="submit" class="btn w-100 text-start">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item p-lg-1">
            <a class="nav-link text-dark custom-auth-btn" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <br />
        <li class="nav-item p-1">
            <a class="nav-link text-dark custom-auth-btn" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
