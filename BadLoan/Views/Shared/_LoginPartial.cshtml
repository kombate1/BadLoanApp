@using Microsoft.AspNetCore.Identity
@using BadLoan.Data  

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject ApplicationDbContext db


<style>
    .custom-auth-btn {
        background-color: #f4b375;
        color: black;
        font-weight: bold;
        border: none;
        border-radius: 12px;
        padding: 10px 20px;
        transition: background-color 0.3s ease;
        text-decoration: none;

    }

        .custom-auth-btn:hover {
            background-color: #e5a966;
            color: black;
        }
</style>

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{           var user = await  UserManager.FindByNameAsync(User!.Identity!.Name!);
            var userID = user.Id.ToString();


            var notifications = db.Notifications.Where(n => n.UserId == userID).ToList();

            var notificationsCount = notifications.Count();

        <li id="notificationArea" class="nav-item d-flex align-items-center me-3">
            @await Html.PartialAsync("_NotificationPartial",notificationsCount)
        </li>

    <li class="nav-item">
        <a id="manage" class="nav-link text-dark custom-auth-btn" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item p-lg-1">
            <a class="nav-link text-dark custom-auth-btn" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
        <br />
    <li class="nav-item p-1">
            <a class="nav-link text-dark custom-auth-btn" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>



