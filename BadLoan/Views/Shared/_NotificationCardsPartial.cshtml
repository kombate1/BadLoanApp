@model IEnumerable<BadLoan.Models.Notification>
@{
    ViewData["Title"] = "Your Notifications";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mb-4">Your Notifications</h2>

@if (!Model.Any())
{
    <div class="alert alert-info">You have no notifications.</div>
}
else
{
    <div class="row row-cols-1 row-cols-md-2 g-4">
        @foreach (var notification in Model)
        {
            <div class="col">
                <div class="card  border-@(notification.IsRead ? "secondary" : "warning") shadow-sm">                   
                    <div class="card-body">
                        <h5 class="text-@(notification.IsRead ? "secondary" : "dark")card-title ">                           
                            @(notification.IsRead ? "Read" : "New Notification")
                        </h5>
                        <p class="card-text">@notification.Message</p>
                        <p class="card-text">
                            <small class="text-muted">Received on @notification.Timestamp.ToString("f")</small>
                        </p>

                        @if (!notification.IsRead)
                        {
                            <button class="btn btn-sm btn-outline-success mark-as-read" data-id="@notification.NotificationId">
                                Mark as Read
                            </button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}


<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".mark-as-read").forEach(button => {
            button.addEventListener("click", function () {
                const notificationId = this.getAttribute("data-id");

                fetch('/LoanApplication/MarkAsReadAjax', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(parseInt(notificationId))
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        this.textContent = "Read";
                        this.classList.remove("btn-outline-success");
                        this.classList.add("btn-success");
                        this.disabled = true;
                    } else {
                        alert("Failed to mark as read.");
                    }
                });
            });
        });
    });
</script>